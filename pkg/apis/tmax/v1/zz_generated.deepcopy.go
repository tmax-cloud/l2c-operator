// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2c) DeepCopyInto(out *L2c) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2c.
func (in *L2c) DeepCopy() *L2c {
	if in == nil {
		return nil
	}
	out := new(L2c)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *L2c) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cDb) DeepCopyInto(out *L2cDb) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(L2cDbFrom)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(L2cDbTo)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cDb.
func (in *L2cDb) DeepCopy() *L2cDb {
	if in == nil {
		return nil
	}
	out := new(L2cDb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cDbFrom) DeepCopyInto(out *L2cDbFrom) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cDbFrom.
func (in *L2cDbFrom) DeepCopy() *L2cDbFrom {
	if in == nil {
		return nil
	}
	out := new(L2cDbFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cDbTo) DeepCopyInto(out *L2cDbTo) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cDbTo.
func (in *L2cDbTo) DeepCopy() *L2cDbTo {
	if in == nil {
		return nil
	}
	out := new(L2cDbTo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cGit) DeepCopyInto(out *L2cGit) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cGit.
func (in *L2cGit) DeepCopy() *L2cGit {
	if in == nil {
		return nil
	}
	out := new(L2cGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cImage) DeepCopyInto(out *L2cImage) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cImage.
func (in *L2cImage) DeepCopy() *L2cImage {
	if in == nil {
		return nil
	}
	out := new(L2cImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cList) DeepCopyInto(out *L2cList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]L2c, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cList.
func (in *L2cList) DeepCopy() *L2cList {
	if in == nil {
		return nil
	}
	out := new(L2cList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *L2cList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cSpec) DeepCopyInto(out *L2cSpec) {
	*out = *in
	if in.Was != nil {
		in, out := &in.Was, &out.Was
		*out = new(L2cWas)
		(*in).DeepCopyInto(*out)
	}
	if in.Db != nil {
		in, out := &in.Db, &out.Db
		*out = new(L2cDb)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cSpec.
func (in *L2cSpec) DeepCopy() *L2cSpec {
	if in == nil {
		return nil
	}
	out := new(L2cSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cStatus) DeepCopyInto(out *L2cStatus) {
	*out = *in
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.TableRowCondition, len(*in))
		copy(*out, *in)
	}
	if in.TaskStatus != nil {
		in, out := &in.TaskStatus, &out.TaskStatus
		*out = make([]L2cTaskStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SonarIssues != nil {
		in, out := &in.SonarIssues, &out.SonarIssues
		*out = make([]SonarIssue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cStatus.
func (in *L2cStatus) DeepCopy() *L2cStatus {
	if in == nil {
		return nil
	}
	out := new(L2cStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cTaskStatus) DeepCopyInto(out *L2cTaskStatus) {
	*out = *in
	in.TaskRunStatus.DeepCopyInto(&out.TaskRunStatus)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cTaskStatus.
func (in *L2cTaskStatus) DeepCopy() *L2cTaskStatus {
	if in == nil {
		return nil
	}
	out := new(L2cTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cWas) DeepCopyInto(out *L2cWas) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(L2cWasFrom)
		(*in).DeepCopyInto(*out)
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(L2cWasTo)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cWas.
func (in *L2cWas) DeepCopy() *L2cWas {
	if in == nil {
		return nil
	}
	out := new(L2cWas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cWasFrom) DeepCopyInto(out *L2cWasFrom) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(L2cGit)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cWasFrom.
func (in *L2cWasFrom) DeepCopy() *L2cWasFrom {
	if in == nil {
		return nil
	}
	out := new(L2cWasFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2cWasTo) DeepCopyInto(out *L2cWasTo) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(L2cImage)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2cWasTo.
func (in *L2cWasTo) DeepCopy() *L2cWasTo {
	if in == nil {
		return nil
	}
	out := new(L2cWasTo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarFlow) DeepCopyInto(out *SonarFlow) {
	*out = *in
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]SonarLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarFlow.
func (in *SonarFlow) DeepCopy() *SonarFlow {
	if in == nil {
		return nil
	}
	out := new(SonarFlow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarIssue) DeepCopyInto(out *SonarIssue) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = make([]map[string]string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	if in.Attr != nil {
		in, out := &in.Attr, &out.Attr
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Transitions != nil {
		in, out := &in.Transitions, &out.Transitions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TextRange != nil {
		in, out := &in.TextRange, &out.TextRange
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Flows != nil {
		in, out := &in.Flows, &out.Flows
		*out = make([]SonarFlow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarIssue.
func (in *SonarIssue) DeepCopy() *SonarIssue {
	if in == nil {
		return nil
	}
	out := new(SonarIssue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarIssueResult) DeepCopyInto(out *SonarIssueResult) {
	*out = *in
	if in.Paging != nil {
		in, out := &in.Paging, &out.Paging
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Issues != nil {
		in, out := &in.Issues, &out.Issues
		*out = make([]SonarIssue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]map[string]string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarIssueResult.
func (in *SonarIssueResult) DeepCopy() *SonarIssueResult {
	if in == nil {
		return nil
	}
	out := new(SonarIssueResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarLocation) DeepCopyInto(out *SonarLocation) {
	*out = *in
	if in.TextRange != nil {
		in, out := &in.TextRange, &out.TextRange
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarLocation.
func (in *SonarLocation) DeepCopy() *SonarLocation {
	if in == nil {
		return nil
	}
	out := new(SonarLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarProfile) DeepCopyInto(out *SonarProfile) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make(map[string]bool, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarProfile.
func (in *SonarProfile) DeepCopy() *SonarProfile {
	if in == nil {
		return nil
	}
	out := new(SonarProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarProfileResult) DeepCopyInto(out *SonarProfileResult) {
	*out = *in
	if in.Profiles != nil {
		in, out := &in.Profiles, &out.Profiles
		*out = make([]SonarProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make(map[string]bool, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarProfileResult.
func (in *SonarProfileResult) DeepCopy() *SonarProfileResult {
	if in == nil {
		return nil
	}
	out := new(SonarProfileResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarProject) DeepCopyInto(out *SonarProject) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarProject.
func (in *SonarProject) DeepCopy() *SonarProject {
	if in == nil {
		return nil
	}
	out := new(SonarProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarProjectResult) DeepCopyInto(out *SonarProjectResult) {
	*out = *in
	if in.Paging != nil {
		in, out := &in.Paging, &out.Paging
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]SonarProject, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarProjectResult.
func (in *SonarProjectResult) DeepCopy() *SonarProjectResult {
	if in == nil {
		return nil
	}
	out := new(SonarProjectResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarToken) DeepCopyInto(out *SonarToken) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarToken.
func (in *SonarToken) DeepCopy() *SonarToken {
	if in == nil {
		return nil
	}
	out := new(SonarToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SonarWebhookResult) DeepCopyInto(out *SonarWebhookResult) {
	*out = *in
	if in.Webhooks != nil {
		in, out := &in.Webhooks, &out.Webhooks
		*out = make([]map[string]string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SonarWebhookResult.
func (in *SonarWebhookResult) DeepCopy() *SonarWebhookResult {
	if in == nil {
		return nil
	}
	out := new(SonarWebhookResult)
	in.DeepCopyInto(out)
	return out
}
