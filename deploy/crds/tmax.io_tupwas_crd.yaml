apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tupwas.tmax.io
spec:
  group: tmax.io
  names:
    kind: TupWAS
    listKind: TupWASList
    plural: tupwas
    singular: tupwas
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: TupWAS is the Schema for the tupwas API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TupWASSpec defines the desired state of TupWAS
          properties:
            from:
              description: WAS source configuration
              properties:
                git:
                  description: Git information for WAS source code
                  properties:
                    revision:
                      description: Revision to be used as a source
                      type: string
                    url:
                      description: URL of git repository
                      type: string
                  required:
                  - url
                  type: object
                packageServerUrl:
                  description: Package server URL that would be used while building
                    the application
                  type: string
                type:
                  description: Current WAS type
                  enum:
                  - weblogic
                  type: string
              required:
              - git
              - type
              type: object
            to:
              description: WAS destination configuration
              properties:
                image:
                  description: Image, in which the built application image would be
                    saved
                  properties:
                    regSecret:
                      description: Secret name that contains a credential to access
                        registry, if the image registry needs credentials to push
                        or pull an image
                      type: string
                    url:
                      description: Image URL where the built application image is
                        stored
                      type: string
                  required:
                  - url
                  type: object
                serviceType:
                  description: ServiceType Default value is Ingress
                  enum:
                  - Ingress
                  - ClusterIP
                  - NodePort
                  - LoadBalancer
                  type: string
                type:
                  description: Target WAS type, to be migrated
                  enum:
                  - jeus:7
                  - jeus:8
                  type: string
              required:
              - image
              - type
              type: object
          required:
          - from
          - to
          type: object
        status:
          description: TupWASStatus defines the observed state of TupWAS
          properties:
            analyzePipelineRunName:
              description: PipelineRun name for Analyze
              type: string
            buildPipelineRunName:
              description: PipelineRun name for Build/Deploy
              type: string
            conditions:
              description: TupWAS project conditions
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            editor:
              description: Editor (VSCode) status
              properties:
                password:
                  description: VSCode access code
                  type: string
                url:
                  description: VSCode URL
                  type: string
              type: object
            lastAnalyzeCompletionTime:
              description: Completion time of last analysis
              format: date-time
              type: string
            lastAnalyzeResult:
              description: Result of last analysis
              type: string
            lastAnalyzeStartTime:
              description: Start time of last analysis
              format: date-time
              type: string
            lastBuildCompletionTime:
              description: Completion time of last build
              format: date-time
              type: string
            lastBuildResult:
              description: Result of last build
              type: string
            lastBuildStartTime:
              description: Start time of last build
              format: date-time
              type: string
            reportUrl:
              description: T-up Jeus URL
              type: string
            wasUrl:
              description: Migrated Was URL
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
